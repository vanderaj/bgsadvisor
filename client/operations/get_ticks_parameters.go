// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetTicksParams creates a new GetTicksParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTicksParams() *GetTicksParams {
	return &GetTicksParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTicksParamsWithTimeout creates a new GetTicksParams object
// with the ability to set a timeout on a request.
func NewGetTicksParamsWithTimeout(timeout time.Duration) *GetTicksParams {
	return &GetTicksParams{
		timeout: timeout,
	}
}

// NewGetTicksParamsWithContext creates a new GetTicksParams object
// with the ability to set a context for a request.
func NewGetTicksParamsWithContext(ctx context.Context) *GetTicksParams {
	return &GetTicksParams{
		Context: ctx,
	}
}

// NewGetTicksParamsWithHTTPClient creates a new GetTicksParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTicksParamsWithHTTPClient(client *http.Client) *GetTicksParams {
	return &GetTicksParams{
		HTTPClient: client,
	}
}

/* GetTicksParams contains all the parameters to send to the API endpoint
   for the get ticks operation.

   Typically these are written to a http.Request.
*/
type GetTicksParams struct {

	/* TimeMax.

	   Maximum time for the tick history in milliseconds (Checks updated_at).
	*/
	TimeMax *string

	/* TimeMin.

	   Minimum time for the tick history in milliseconds (Checks updated_at).
	*/
	TimeMin *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get ticks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTicksParams) WithDefaults() *GetTicksParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get ticks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTicksParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get ticks params
func (o *GetTicksParams) WithTimeout(timeout time.Duration) *GetTicksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get ticks params
func (o *GetTicksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get ticks params
func (o *GetTicksParams) WithContext(ctx context.Context) *GetTicksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get ticks params
func (o *GetTicksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get ticks params
func (o *GetTicksParams) WithHTTPClient(client *http.Client) *GetTicksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get ticks params
func (o *GetTicksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTimeMax adds the timeMax to the get ticks params
func (o *GetTicksParams) WithTimeMax(timeMax *string) *GetTicksParams {
	o.SetTimeMax(timeMax)
	return o
}

// SetTimeMax adds the timeMax to the get ticks params
func (o *GetTicksParams) SetTimeMax(timeMax *string) {
	o.TimeMax = timeMax
}

// WithTimeMin adds the timeMin to the get ticks params
func (o *GetTicksParams) WithTimeMin(timeMin *string) *GetTicksParams {
	o.SetTimeMin(timeMin)
	return o
}

// SetTimeMin adds the timeMin to the get ticks params
func (o *GetTicksParams) SetTimeMin(timeMin *string) {
	o.TimeMin = timeMin
}

// WriteToRequest writes these params to a swagger request
func (o *GetTicksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.TimeMax != nil {

		// query param timeMax
		var qrTimeMax string

		if o.TimeMax != nil {
			qrTimeMax = *o.TimeMax
		}
		qTimeMax := qrTimeMax
		if qTimeMax != "" {

			if err := r.SetQueryParam("timeMax", qTimeMax); err != nil {
				return err
			}
		}
	}

	if o.TimeMin != nil {

		// query param timeMin
		var qrTimeMin string

		if o.TimeMin != nil {
			qrTimeMin = *o.TimeMin
		}
		qTimeMin := qrTimeMin
		if qTimeMin != "" {

			if err := r.SetQueryParam("timeMin", qTimeMin); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
